#!/bin/bash

COLOR_RESET=$'\033[0m'
COLOR_NOBOLD=$'\033[21m'
COLOR_NODIM=$'\033[22m'
COLOR_NOUNDERLINE=$'\033[24m'
COLOR_NOBLINK=$'\033[25m'
COLOR_NOINVERSE=$'\033[27m'
COLOR_NOHIDDEN=$'\033[28m'

COLOR_FBLACK=$'\033[30m'
COLOR_FRED=$'\033[31m'
COLOR_FGREEN=$'\033[32m'
COLOR_FYELLOW=$'\033[33m'
COLOR_FBLUE=$'\033[34m'
COLOR_FPURPLE=$'\033[35m'
COLOR_FCYAN=$'\033[36m'
COLOR_FGRAY=$'\033[37m'
COLOR_FNORMAL=$'\033[39m'

COLOR_BBLACK=$'\033[0;40m'
COLOR_BRED=$'\033[0;41m'
COLOR_BGREEN=$'\033[0;42m'
COLOR_BYELLOW=$'\033[0;43m'
COLOR_BBLUE=$'\033[0;44m'
COLOR_BPURPLE=$'\033[0;45m'
COLOR_BCYAN=$'\033[0;46m'
COLOR_BGRAY=$'\033[0;47m'
COLOR_BNORMAL=$'\033[49m'

COLOR_BOLD=$'\033[1m'
COLOR_DIM=$'\033[2m'
COLOR_UNDERLINE=$'\033[4m'
COLOR_BLINK=$'\033[5m'
COLOR_INVERSE=$'\033[7m'
COLOR_HIDDEN=$'\033[8m'

unset -f color
color() {
    if [[ $@ =~ (^|[[:space:]])(-h|--help)($|[[:space:]]) ]]; then
        echo "color [-p] [[fg_ | bg_] [bgt_][ <color> ]] [[-] <decorator>] [reset]"
	echo
	echo "    -p Enable non-printable escaping for prompt use;   \[ ... \]"
        echo
        echo "    Color can be prepended with"
        echo "        fg_ for a foreground <color>    * default"
        echo "        bg_ for a background <color>"
        echo "        bgt_ for a bright <color>"
        echo 
        echo "    Decorators can be prepended with a "-" to disable the effect*"
        echo "       * NOTE!!!: -bold and -dunderline DO NOT work right.  The only way"
        echo "                  to disable is to <reset> which clears all colors and decorators"
        echo "        Note: The code for -bold causes the dunderline"
        echo "        Note: There is no code for -dundereline"
        echo
        # for c in black red green yellow blue purple cyan gray; do
        #     [ "$c" == "black" ] && s="<color> -" || s="<xxxxx> -"
        #     x="    $s"
        #     for fgbg in fg_ bg_; do
        #         for bright in "" bgt_; do
        #             x="$x $(printf "%-9s" "$(color ${fgbg}${bright}${c})${fgbg}${bright}${c}$(color reset)")"
        #         done
        #     done
        #     echo "$x"
        # done | column -t | sed 's/^/    /; s/<xxxxx>  -/          /;'
        #
        # echo

        for c in black red green yellow blue purple cyan gray; do
            for fgbg in fg_ bg_; do
                for bright in "" bgt_; do
                    echo -n "$(color ${fgbg}${bright}${c})${fgbg}${bright}${c}$(color reset) "
                done
            done
            echo
        done | column -t | sed 's/^/            - /; s/       \( - [^[:space:]]*fg_black\)/<color>\1/'
        # [^[:space:]]*  is to catch all the color escape codes

        echo

        for f in bold dim underline dunderline blink inverse hidden strike; do
            [ "$f" == "bold" ] && s="<decorator> -" || s="            -"
            echo "    $s $(color $f)$f$(color -$f) -$f"
        done
        # echo "    <decorator> - normal $(color bold)bold$(color -bold) -bold"
        # echo "                - normal $(color dim)dim$(color -dim) -dim"
        # echo "                - normal $(color underline)underline$(color -underline) -underline"
        # echo "                - normal $(color dunderline)dunderline$(color -dunderline) -dunderline"
        # echo "                - normal $(color blink)blink$(color -blink) -blink"
        # echo "                - normal $(color inverse)inverse$(color -inverse) -inverse"
        # echo "                - normal $(color hidden)hidden$(color -hidden) -hidden"
        # echo "                - normal $(color strike)strike$(color -strike) -strike"
        # echo
        echo
        return 1
    fi

    local E=$'\033['
    local x=""
    local sep=""
    local C=""
    local o_prompt=""
    local c_prompt=""

    for arg in "$@"
    do
        local fmt=""
        if [[ $arg == "-"* ]]; then
            fmt="2"
        fi
        
        local fgbg="3"
        if [[ $arg =~ (^|_)"fg"($|_) ]]; then
            fgbg="3"
        elif [[ $arg =~ (^|_)"bg"($|_) ]]; then
            fgbg="4"
        fi

        if [[ $arg =~ (^|_)"bgt"($|_) ]]; then
            fgbg=$((fgbg + 6))
        fi

        case $arg in
            -p)
                o_prompt=$"\["
                c_prompt=$"\]"
                ;;
            "reset")
                x="0"
                break
                ;;
            *bold)
                if [[ $fmt -eq 2 ]]; then
                    x="${x}${sep}0"
                else
                    x="${x}${sep}1"
                fi
                sep=";"
                ;;
            *dim)
                x="${x}${sep}${fmt}2"
                sep=";"
                ;;
            *italic)
                x="${x}${sep}${fmt}3"
                sep=";"
                ;;
            *dunderline)
                if [[ $fmt -eq 2 ]]; then
                    x="${x}${sep}0"
                else
                    x="${x}${sep}21"
                fi
                sep=";"
                ;;
            *underline)
                x="${x}${sep}${fmt}4"
                sep=";"
                ;;
            *blink)
                x="${x}${sep}${fmt}5"
                sep=";"
                ;;
            *inverse)
                x="${x}${sep}${fmt}7"
                sep=";"
                ;;
            *hidden)
                x="${x}${sep}${fmt}8"
                sep=";"
                ;;
            *strike)
                x="${x}${sep}${fmt}9"
                sep=";"
                ;;
            *black)
                C="${fgbg}0"
                ;;
            *red)
                C="${fgbg}1"
                ;;
            *green)
                C="${fgbg}2"
                ;;
            *yellow)
                C="${fgbg}3"
                ;;
            *blue)
                C="${fgbg}4"
                ;;
            *magenta|*purple)
                C="${fgbg}5"
                ;;
            *cyan)
                C="${fgbg}6"
                ;;
            *gray)
                C="${fgbg}7"
                ;;
            *default)
                C="${fgbg}9"
                ;;
        esac
    done

    [ -z $C ] || C="${sep}${C}"

    echo -en ${o_prompt}$'\033['"${x}${C}m${c_prompt}"
}

unset -f bold
bold() {
    echo "${1/\[/\[1;}"
}

unset -f dim
dim() {
    echo "${/\[/\[2;}"
}



unset -f blink
blink() {
    echo "${1/\[/\[5;}"
}

unset -f underline
underline() {
    echo "${1/\[/\[4;}"
}

unset -f bright
bright() {
  local x="$1"
  x=${x/;3/;9}  # foreground
  x=${x/;4/;10} # background
  echo "$x"
}

